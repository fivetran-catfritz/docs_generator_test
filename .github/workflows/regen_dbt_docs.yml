name: Regen dbt Docs from PR Comment

on:
  pull_request:
    types: [labeled]

jobs:
  regen-docs:
    if: |
      github.event.label.name == 'ready:docs'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get PR branch name
      id: pr
      run: |
        echo "branch=${{ github.event.pull_request.head.ref }}" >> "$GITHUB_OUTPUT"

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dbt
      run: |
        pip install --upgrade pip
        pip install dbt-core dbt-postgres

    - name: Set up dbt profile
      run: |
        mkdir -p ~/.dbt
        echo "$DBT_PROFILES_YML" > ~/.dbt/profiles.yml
      env:
        DBT_PROFILES_YML: ${{ secrets.DBT_PROFILES_YML }}

    - name: Checkout PR branch and rebase
      run: |
        git checkout -B $BRANCH_NAME origin/$BRANCH_NAME
        git pull --rebase origin $BRANCH_NAME
      env:
        BRANCH_NAME: ${{ steps.pr.outputs.branch }}

    - name: Enable doc-specific vars in dbt_project.yml
      working-directory: integration_tests
      run: |
        cp dbt_project.yml dbt_project.yml.bak
        sed -i -E 's/^([[:space:]]*)# ([^#]+)# @doc-var/\1\2# @doc-var/' dbt_project.yml

    - name: Run dbt docs
      working-directory: integration_tests
      run: |
        dbt deps
        dbt seed --full-refresh
        dbt run
        dbt docs generate

    - name: Copy docs to root folder
      run: |
        rm -rf docs/*
        mkdir -p docs
        cp integration_tests/target/catalog.json docs/
        cp integration_tests/target/index.html docs/
        cp integration_tests/target/manifest.json docs/

    - name: Commit and push docs to PR branch
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add docs/
        git commit -m "Regenerate dbt docs from integration_tests" || echo "No changes to commit"
        git push origin "$BRANCH_NAME"
      env:
        BRANCH_NAME: ${{ steps.pr.outputs.branch }}

    - name: Restore original dbt_project.yml
      working-directory: integration_tests
      if: always()
      run: mv dbt_project.yml.bak dbt_project.yml

    - name: Drop dbt schema using fivetran_utils
      working-directory: integration_tests
      run: |
        dbt run-operation fivetran_utils.drop_schemas_automation
